         ;;============================================================================
         ;; File: software.psm
         ;; This is the PicoBlaze program for EE178 Lab #7.
         ;;============================================================================
         ;;============================================================================
         ;; Port address declarations.
         ;;============================================================================
         CONSTANT switches_lo, 00 ; port for 8-bit switch input
         CONSTANT switches_hi, 01 ; port for 8-bit switch input
         CONSTANT leds_lo, 02     ; port for 8-bit led data out
         CONSTANT leds_hi, 03     ; port for 8-bit led data out
         CONSTANT my_sid_lo, 95   ; lo byte of my student id (put yours here)
         CONSTANT my_sid_hi, 52   ; hi byte of my student id (put yours here)
         CONSTANT zero, 00        ; zero
         CONSTANT one, 01         ; one
         ;;============================================================================
         ;; Infinite loop.
         ;;============================================================================
   loop: INPUT s0, switches_lo    ; get lo switch values
         INPUT s1, switches_hi    ; get hi switch values
         ; Currently, this program acts as a "virtual wire" by reading
         ; the switch values and copying them to the leds.  You should
         ; prove to yourself that this works.
         ; Then, you need to modify this program.  If the 16-bit switch
         ; value in {s1,s0} equals {my_sid_hi,my_sid_lo} then complement
         ; the value and display it on the leds.  Otherwise, add s0 and
         ; s1, and display the result on the leds.
         COMPARE s1, my_sid_hi
         JUMP NZ, nomatch
         COMPARE s0, my_sid_lo
         JUMP NZ, nomatch
  match: XOR s0, FF
         XOR s1, FF
         JUMP display
nomatch: ADD s0, s1
display: OUTPUT s0, leds_lo       ; put lo led values
         OUTPUT s1, leds_hi       ; put hi led values
         JUMP loop                ; go back and repeat
         ;;============================================================================
         ;;
         ;;============================================================================
